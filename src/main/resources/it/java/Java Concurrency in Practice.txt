Listing�5.7.�ConcurrentMap�Interface.� // Insert into map only if no value is mapped from K.
Replace value only if K is mapped to some value.
Listing�6.7.�Lifecycle�Methods�in�ExecutorService.� boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException; //  ...
Listing�6.16.�Fetching�an�Advertisement�with�a�Time�Budget.� // Render the page while waiting for the ad Ad ad; // Only wait for the remaining time budget return page;
Listing�7.10.�Cancelling�a�Task�Using�Future.� long timeout, TimeUnit unit) // task will be cancelled below // exception thrown in task; rethrow // Harmless if task already completed.
Future<String> header, footer; // Will deadlock -- task waiting for result of subtask.
Listing�9.2.�Executor�Built�Atop�SwingUtilities.� // Singletons have a private constructor and a public factory.
Listing�14.1.�Structure�of�Blocking�StateǦdependent�Actions.� acquire lock on object state release lock wait until precondition might hold optionally fail if interrupted or timeout expires reacquire lock perform action.
Listing�14.7.�Canonical�Form�for�StateǦdependent�Methods.� // condition predicate must be guarded by lock // object is now in desired state.
Listing�14.10.�Condition�Interface.� boolean await(long time, TimeUnit unit) throws InterruptedException; long awaitNanos(long nanosTimeout) throws InterruptedException; boolean awaitUntil(Date deadline) throws InterruptedException;
Listing�14.13.�Canonical�Forms�for�Acquisition�and�Release�in�AQS.� enqueue current thread if not already queued block current thread else return failure possibly update synchronization state dequeue thread if it was queued return success.
